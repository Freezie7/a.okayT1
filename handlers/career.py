from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import F

from database import db
from ai.scibox_service import scibox_service

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /career_plan
@router.message(Command("career_plan"))
async def cmd_career_plan(message: Message):
    await generate_career_plan(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "üéØ –ú–æ–π –∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø–ª–∞–Ω"  
@router.message(F.text == "üéØ –ú–æ–π –∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø–ª–∞–Ω")
async def career_plan_button(message: Message):
    await generate_career_plan(message)

# –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞
async def generate_career_plan(message: Message):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –ø–ª–∞–Ω–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    user = await db.get_user(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ª–∏ –∏–º—è
    if not user or not user['name']:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—å —á–µ—Ä–µ–∑ /profile")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞–≤—ã–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    languages = await db.get_user_languages(user_id)
    programming = await db.get_user_programming(user_id)  
    skills = await db.get_user_skills(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ
    if not languages and not programming and not skills and not user['career_goal']:
        await message.answer(
            "üìã –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –Ω—É–∂–Ω–æ:\n"
            "‚Ä¢ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å /profile\n"
            "‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤—ã–∫–∏ /skills\n"
            "‚Ä¢ –£–∫–∞–∑–∞—Ç—å –∫–∞—Ä—å–µ—Ä–Ω—É—é —Ü–µ–ª—å"
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
    wait_msg = await message.answer("üß† <b>–ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å...</b>\n–≠—Ç–æ –∑–∞–π–º–µ—Ç 20-30 —Å–µ–∫—É–Ω–¥", parse_mode="HTML")
    
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ò–ò
        user_data = {
            "name": user['name'],
            "about": " ",
            "education_level": user['education_level'],
            "education_place": user['education_place'],
            "career_goal": user['career_goal'],
            "languages": languages,
            "programming": programming,
            "skills": skills
        }
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–ª–∞–Ω
        career_plan = await scibox_service.generate_career_plan(user_data)
        
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è"
        try:
            await wait_msg.delete()
        except:
            pass
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        await message.answer("üéØ <b>–í–∞—à –∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø–ª–∞–Ω:</b>\n" + "‚ïê" * 35, parse_mode="HTML")
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –ø–ª–∞–Ω –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if len(career_plan) > 4000:
            parts = [career_plan[i:i+4000] for i in range(0, len(career_plan), 4000)]
            for i, part in enumerate(parts, 1):
                if i == 1:
                    await message.answer(part)
                else:
                    await message.answer(part)
        else:
            await message.answer(career_plan)
        
        # –ù–∞—á–∏—Å–ª—è–µ–º XP –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò–ò
        await db.add_xp_to_user(user_id, 25)
        await message.answer("‚úÖ +25 XP –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞! üöÄ")
        
    except Exception as e:
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è"
        try:
            await wait_msg.delete()
        except:
            pass
        
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
