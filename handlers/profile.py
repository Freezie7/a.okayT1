from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext

from states.profile_st import ProfileState
from database import db
from keyboards.main_kb import get_main_keyboard
from keyboards.profile_kb import get_education_keyboard, get_skip_keyboard

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ /profile
@router.message(Command("profile"))
async def cmd_profile(message: Message, state: FSMContext):
    await message.answer(
        "üéÆ <b>–î–∞–≤–∞–π —Å–æ–±–µ—Ä—ë–º —Ç–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞!</b>\n\n"
        "–ö–∞–∂–¥—ã–π —Ç–≤–æ–π –æ—Ç–≤–µ—Ç ‚Äî —ç—Ç–æ +10 –∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º –∏ –Ω–æ–≤—ã–µ –±–µ–π–¥–∂–∏!\n"
        "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? (–ò–º—è –∏ –§–∞–º–∏–ª–∏—è)",
        parse_mode="HTML",
        reply_markup=ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –≤—Ä–µ–º—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    )
    await state.set_state(ProfileState.name)
    # –ù–∞—á–∏—Å–ª–∏–º XP –∑–∞ –Ω–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    await db.add_xp_to_user(message.from_user.id, 10)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è "name"
@router.message(ProfileState.name, F.text)
async def process_name(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ –±–∞–∑—É –∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await db.update_user_profile(message.from_user.id, name=message.text)
    await state.update_data(name=message.text)
    
    # –ù–∞—á–∏—Å–ª—è–µ–º XP –∑–∞ –≤–≤–æ–¥ –∏–º–µ–Ω–∏
    await db.add_xp_to_user(message.from_user.id, 10)
    
    await message.answer(
        f"–û—Ç–ª–∏—á–Ω–æ, {message.text}! +10 XP –∫ —Ö–∞—Ä–∏–∑–º–µ! üéâ\n\n"
        "–¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∫—Ä–∞—Ç–∫–æ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è):\n"
        "<i>–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è, —á—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–∞–∫–∏–µ —É —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—ã...</i>",
        parse_mode="HTML"
    )
    await state.set_state(ProfileState.about)


@router.message(ProfileState.about, F.text)
async def process_about(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º "–æ —Å–µ–±–µ" –≤ –±–∞–∑—É
    await db.update_user_profile(message.from_user.id, about=message.text)
    await db.add_xp_to_user(message.from_user.id, 15)
    await db.add_badge_to_user(message.from_user.id, "profile_start")
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    await message.answer(
        "üìö <b>–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Å–≤–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</b>\n\n"
        "–ö–∞–∫–æ–π —É —Ç–µ–±—è —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?",
        parse_mode="HTML",
        reply_markup=get_education_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
    )
    await state.set_state(ProfileState.education_level)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É—Ä–æ–≤–Ω—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
@router.message(ProfileState.education_level, F.text)
async def process_education_level(message: Message, state: FSMContext):
    await db.update_user_profile(message.from_user.id, education_level=message.text)
    await db.add_xp_to_user(message.from_user.id, 10)
    
    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ! –ì–¥–µ —Ç—ã —É—á–∏–ª—Å—è(–ª–∞—Å—å)? –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è:",
        reply_markup=ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤—É
    )
    await state.set_state(ProfileState.education_place)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
@router.message(ProfileState.education_place, F.text)
async def process_education_place(message: Message, state: FSMContext):
    await db.update_user_profile(message.from_user.id, education_place=message.text)
    await db.add_xp_to_user(message.from_user.id, 10)
    
    await message.answer(
        "üéØ <b>–¢–µ–ø–µ—Ä—å —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ!</b>\n\n"
        "–ö–µ–º —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ 3 –≥–æ–¥–∞?\n"
        "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∂–µ–ª–∞–µ–º–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏:",
        parse_mode="HTML"
    )
    await state.set_state(ProfileState.career_goal)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞—Ä—å–µ—Ä–Ω–æ–π —Ü–µ–ª–∏ (–§–ò–ù–ê–õ–¨–ù–´–ô —à–∞–≥ —Ü–µ–ø–æ—á–∫–∏)
@router.message(ProfileState.career_goal, F.text)
async def process_career_goal(message: Message, state: FSMContext):
    await db.update_user_profile(message.from_user.id, career_goal=message.text)
    await db.add_xp_to_user(message.from_user.id, 20)  # –ë–æ–ª—å—à–µ XP –∑–∞ –≤–∞–∂–Ω—ã–π –æ—Ç–≤–µ—Ç!
    
    # –í—ã–¥–∞–µ–º –±–µ–π–¥–∂ –∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    await db.add_badge_to_user(message.from_user.id, "profile_done")
    
    await state.clear() 
    
    await message.answer(
        f"üî• <b>–ü–æ—Ç—Ä—è—Å–∞—é—â–µ! –¢—ã –ø—Ä–æ—à–µ–ª –±–∞–∑–æ–≤–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è!</b>\n\n"
        f"–¢–≤–æ—è —Ü–µ–ª—å: <i>{message.text}</i>\n"
        f"+20 XP –∑–∞ —á–µ—Ç–∫—É—é —Ü–µ–ª—å!\n"
        f"–¢—ã –ø–æ–ª—É—á–∏–ª –±–µ–π–¥–∂ '–ü—Ä–æ—Ñ–∏–ª–∏—Å—Ç'! üèÜ\n\n"
        f"–¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /myprofile —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    )