from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from database import db

router = Router()

@router.message(Command("vacancies"))
async def cmd_vacancies(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏"""
    try:
        vacancies = await db.get_active_vacancies()
        
        if not vacancies:
            await message.answer("üì≠ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π")
            return
        
        response = "üìã *–û—Ç–∫—Ä—ã—Ç—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:*\n\n"
        
        for vacancy in vacancies:
            response += f"üìù *{vacancy['title']}*\n"
            response += f"üìÑ {vacancy['description']}\n"
            response += f"üîß *–¢—Ä–µ–±—É–µ–º—ã–µ –Ω–∞–≤—ã–∫–∏:* {vacancy['required_skills']}\n"
            response += "‚îÄ" * 30 + "\n"
        
        response += "\n–ï—Å–ª–∏ –≤—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –ø–æ –Ω–∞–≤—ã–∫–∞–º - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å HR-–æ—Ç–¥–µ–ª–æ–º!"
        
        await message.answer(response, parse_mode="Markdown")
        
    except Exception as e:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π: {e}")